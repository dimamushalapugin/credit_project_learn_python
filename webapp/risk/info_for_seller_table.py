import json

from webapp.payment.models import Seller


def read_pages_for_table(seller_inn, info_first, info_delta, is_factory, is_dealer):
    info_table = {
        'Данные о контрагенте': 'Нет',
        'Ликвидация': info_delta['Процесс ликвидации (да_нет)'],
        'Банкротства': info_delta['Процесс банкротства (да_нет)'],
        'Реорганизация': info_delta['Процесс реорганизации (да_нет)'],
        'Недостоверности сведений': info_first['Недостоверность сведений (да_нет)'],
        'Совпадение ИНН': 'Нет',
        'Менее 3 лет': info_first['Менее 3х лет (да_нет)'],
        'Ответчик': info_delta['Ответчик (да_нет)'],
        'Сообщения о банкротстве': info_delta['Сообщения о банкротстве (да_нет)'],
        'Исполнительные производства (более 100 тыс. руб.)': info_delta['ФССП более 100 (да_нет)'],
        'Убыточность': info_first['Убыточность (да_нет)'],
        'Адрес массовой регистрации': info_first['Массовый адрес (да_нет)'],
        'Массовый руководитель': info_delta['Массовый руководитель (да_нет)'],
        'Налоговая задолженность': info_delta['Налоговая задолженность (да_нет)'],
        'Заблокированные расч. сч.': info_delta['Заблокированные расчетные счета (да_нет)'],
        'Экстремисткая деятельность': info_first['Экстремизм (да_нет)'],
        'Черный список ЦБ': 'Нет',
        'Гос. контракты': info_delta['Госконтракты (да_нет)'],
        'Недобросовестные поставщики': info_delta['Недобросовестный поставщик (да_нет)'],
        'Завод-изготовитель': 'Да' if is_factory == 'on' else 'Нет',
        'Дилер/дистрибьютор': 'Да' if is_dealer == 'on' else 'Нет',
        'История в ЛКМБ': Seller.check_in_base(seller_inn)
    }

    with open('seller_table_info.json', 'a', encoding='utf-8') as file:
        json.dump(info_table, file, ensure_ascii=False, indent=3)
        file.write('\n')
        file.write('\n')
        file.write('=' * 70)
        file.write('\n')
        file.write('\n')

    return info_table


def read_pages_for_table_individual(seller_inn, info_first, is_factory, is_dealer):
    info_table = {
        'Данные о контрагенте': 'Нет',
        'Ликвидация': info_first['Ликвидация (да_нет)'],
        'Банкротства': info_first['Банкротство (да_нет)'],
        'Реорганизация': 'Нет',
        'Недостоверности сведений': info_first['Недостоверность сведений (да_нет)'],
        'Совпадение ИНН': 'Нет',
        'Менее 3 лет': info_first['Менее 3 лет (да_нет)'],
        'Ответчик': info_first['Ответчик (да_нет)'],
        'Сообщения о банкротстве': info_first['Сообщения о банкротстве (да_нет)'],
        'Исполнительные производства (более 100 тыс. руб.)': info_first['ФССП более 100 (да_нет)'],
        'Убыточность': 'Нет',
        'Адрес массовой регистрации': info_first['Массовый адрес (да_нет)'],
        'Массовый руководитель': 'Нет',
        'Налоговая задолженность': info_first['Налоговая задолженность (да_нет)'],
        'Заблокированные расч. сч.': info_first['Заблокированные счета (да_нет)'],
        'Экстремисткая деятельность': 'Нет',
        'Черный список ЦБ': 'Нет',
        'Гос. контракты': info_first['Гос контракты (да_нет)'],
        'Недобросовестные поставщики': info_first['РНД (да_нет)'],
        'Завод-изготовитель': 'Да' if is_factory == 'on' else 'Нет',
        'Дилер/дистрибьютор': 'Да' if is_dealer == 'on' else 'Нет',
        'История в ЛКМБ': Seller.check_in_base(seller_inn)
    }

    with open(f'seller_table_info {seller_inn}.json', 'a', encoding='utf-8') as file:
        json.dump(info_table, file, ensure_ascii=False, indent=3)
        file.write('\n')
        file.write('\n')
        file.write('=' * 70)
        file.write('\n')
        file.write('\n')

    return info_table
